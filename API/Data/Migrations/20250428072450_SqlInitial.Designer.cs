// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250428072450_SqlInitial")]
    partial class SqlInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Interests")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introduction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KnownAs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("datetime2");

                    b.Property<string>("LookingFor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("API.Entities.GeoTocka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("DDLat")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("DDLon")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int?>("FID")
                        .HasColumnType("int");

                    b.Property<int>("IdJavnegaObjekta")
                        .HasColumnType("int");

                    b.Property<string>("JavniObjektSifraJavnegaObjekta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Lat")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal?>("Lng")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OZN_obj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ozn_tock")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SIFKO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ST_stevilka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifraMerilnegaMesta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifraObjekta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zaporedje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdJavnegaObjekta");

                    b.ToTable("GeoTocke");
                });

            modelBuilder.Entity("API.Entities.MerilnoMesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dobavitelj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DobaviteljNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Energent")
                        .HasColumnType("int");

                    b.Property<string>("EnergentTip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdJavnegaZavoda")
                        .HasColumnType("int");

                    b.Property<int>("IdStavbe")
                        .HasColumnType("int");

                    b.Property<decimal?>("NadmorskaVisina")
                        .HasColumnType("decimal(7,4)");

                    b.Property<string>("NazivJavnegaObjekta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObracunskaMoc")
                        .HasColumnType("int");

                    b.Property<string>("Ogrevanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OgrevanjeId")
                        .HasColumnType("int");

                    b.Property<string>("OgrevanjeOznaka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifraJavnegaObjekta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StMerilnegaMesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ZemljepisnaDolzina")
                        .HasColumnType("decimal(7,4)");

                    b.Property<decimal?>("ZemljepisnaSirina")
                        .HasColumnType("decimal(7,4)");

                    b.HasKey("Id");

                    b.HasIndex("IdStavbe");

                    b.ToTable("MerilnaMesta");
                });

            modelBuilder.Entity("API.Entities.Odcitek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DOEnergijaEuro")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("DOObracunskaMocEuro")
                        .HasColumnType("decimal(9,2)");

                    b.Property<DateTime>("DatumOdcitka")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ELEEnergijaEUR")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("ELEOmreznina")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("ELEPrispevki")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("EleJalovaEnergija")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("EleenergijaET")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("EleenergijaMt")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("EleenergijaVt")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("EleobracunskaMoc")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("ElkoLbUnpEnergijskiEkvivalent")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("ElkoLbUnpEnotaMere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ElkoLbUnpKolicina")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("EnergentTip")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Energija")
                        .HasColumnType("decimal(9,2)");

                    b.Property<int>("IdJavnegaObjekta")
                        .HasColumnType("int");

                    b.Property<int>("IdMerilnegaMesta")
                        .HasColumnType("int");

                    b.Property<decimal?>("KANALCCNOmrezninaEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("KANALCiscenjeVodeEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("KANALKanalscinaEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("KANALOmrezninaEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("KANALZnesek")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("LetoMesec")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NazivMerilnegaMesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ObdobjeStoritveDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ObdobjeStoritveOd")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("PLINDistribucija")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("PLINOdjemnaMoc")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("PLINPorabaKWh")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("PLINPrispevki")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("PLINSkupajBruto")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("PLINZemeljskiPlin")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("SMETIEmbalazaEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("SMETIObdelavaBioEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("SMETIObdelavaMKOEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("SMETIOdlaganjeMKOEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("SMETIOpomba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SMETIPapirKartonEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("SMETIZbiranjeBioEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("SMETIZbiranjeMKOEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("SMETIZnesek")
                        .HasColumnType("decimal(9,2)");

                    b.Property<string>("StMerilnegaMesta")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StevilkaRacuna")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipOgrevanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipOgrevanjaOznaka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("VODAOmrezninaEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("VODAPorabaM3")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("VODAPrispevekEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("VODAVodarinaEur")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal?>("VODAZnesek")
                        .HasColumnType("decimal(9,2)");

                    b.Property<decimal>("Znesek")
                        .HasColumnType("decimal(9,2)");

                    b.HasKey("Id");

                    b.HasIndex("EnergentTip");

                    b.HasIndex("IdJavnegaObjekta");

                    b.HasIndex("IdMerilnegaMesta");

                    b.HasIndex("LetoMesec");

                    b.HasIndex("StMerilnegaMesta");

                    b.ToTable("Odcitki");
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("API.Entities.PhotoStavbe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StavbaId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StavbaId");

                    b.ToTable("PhotosStavbe");
                });

            modelBuilder.Entity("API.Entities.Stavba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("KatastrskaObcinaIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KatastrskaObcinaSifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlasifikacijaCcSi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlasifikacijaNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KlimatskiKraj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("KondicioniranaPovrsina")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("LetoIzgradnje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LetoObnove")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NTP_NetoTloris")
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal?>("NadmorskaVisina")
                        .HasColumnType("decimal(7,4)");

                    b.Property<string>("Naslov")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazivEnote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ogrevanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OgrevanjeDrugi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OgrevanjeId")
                        .HasColumnType("int");

                    b.Property<string>("OgrevanjeOznaka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opomba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parcele")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ParcelePovrsina")
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal?>("PovrsinaAplikacija")
                        .HasColumnType("decimal(7,2)");

                    b.Property<decimal?>("ProjekcijaTloris")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("ST_OBJ_Gurs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SifraJavnegaObjekta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("StavbaDaNe")
                        .HasColumnType("bit");

                    b.Property<string>("StavbaDel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StavbaStevilka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UlicaHs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("UporabnaPovrsina")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("VrstaObjekta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VrstaObjektaId")
                        .HasColumnType("int");

                    b.Property<decimal?>("ZemljepisnaDolzina")
                        .HasColumnType("decimal(7,4)");

                    b.Property<decimal?>("ZemljepisnaSirina")
                        .HasColumnType("decimal(7,4)");

                    b.HasKey("Id");

                    b.ToTable("Stavbe");
                });

            modelBuilder.Entity("API.Entities.GeoTocka", b =>
                {
                    b.HasOne("API.Entities.Stavba", "Stavba")
                        .WithMany("GeoTocke")
                        .HasForeignKey("IdJavnegaObjekta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stavba");
                });

            modelBuilder.Entity("API.Entities.MerilnoMesto", b =>
                {
                    b.HasOne("API.Entities.Stavba", "Stavba")
                        .WithMany("MerilnaMesta")
                        .HasForeignKey("IdStavbe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stavba");
                });

            modelBuilder.Entity("API.Entities.Odcitek", b =>
                {
                    b.HasOne("API.Entities.MerilnoMesto", "MerilnoMesto")
                        .WithMany("Odcitki")
                        .HasForeignKey("IdMerilnegaMesta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MerilnoMesto");
                });

            modelBuilder.Entity("API.Entities.Photo", b =>
                {
                    b.HasOne("API.Entities.AppUser", "AppUser")
                        .WithMany("Photos")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("API.Entities.PhotoStavbe", b =>
                {
                    b.HasOne("API.Entities.Stavba", "Stavba")
                        .WithMany("PhotosStavbe")
                        .HasForeignKey("StavbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stavba");
                });

            modelBuilder.Entity("API.Entities.AppUser", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("API.Entities.MerilnoMesto", b =>
                {
                    b.Navigation("Odcitki");
                });

            modelBuilder.Entity("API.Entities.Stavba", b =>
                {
                    b.Navigation("GeoTocke");

                    b.Navigation("MerilnaMesta");

                    b.Navigation("PhotosStavbe");
                });
#pragma warning restore 612, 618
        }
    }
}
